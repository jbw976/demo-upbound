apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: user-access-variable
spec:
  compositeTypeRef:
    apiVersion: example.crossplane.io/v1beta1
    kind: UserAccess
  mode: Pipeline
  pipeline:
    - step: render-templates
      functionRef:
        name: upbound-function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{- range $i := until ( .observed.composite.resource.spec.count | int ) }}
            ---
            apiVersion: iam.aws.upbound.io/v1beta1
            kind: User
            metadata:
              annotations:
                {{ setResourceNameAnnotation (print "test-user-" $i) }}
              labels:
                testing.upbound.io/example-name: test-user-{{ $i }}
              {{ if or ( eq $.observed.resources nil )  ( eq ( index $.observed.resources ( print "test-user-" $i ) ) nil ) }}
                dummy: {{ randomChoice "foo" "bar" "baz" }}
              {{ else }}
                dummy: {{ ( index $.observed.resources ( print "test-user-" $i ) ).resource.metadata.labels.dummy }}
              {{ end }}
            spec:
              forProvider: {}
            ---
            apiVersion: iam.aws.upbound.io/v1beta1
            kind: AccessKey
            metadata:
              annotations:
                {{ setResourceNameAnnotation (print "sample-access-key-" $i) }}
            spec:
              forProvider:
                # typo for existing field
                userSelectorFoo:
                  matchLabels:
                    testing.upbound.io/example-name: test-user-{{ $i }}
              # wrong indentation for an otherwise correct field
              pgpKey: foo
              writeConnectionSecretToRef:
                name: sample-access-key-secret-{{ $i }}
                namespace: upbound-system
                # non existing field
                fookey: foovalue
            {{- end }}
            ---
            apiVersion: meta.gotemplating.fn.crossplane.io/v1alpha1
            kind: CompositeConnectionDetails
            {{ if eq $.observed.resources nil }}
            data: {}
            {{ else }}
            data:
              username: {{ ( index $.observed.resources "sample-access-key-0" ).connectionDetails.username }}
              password: {{ ( index $.observed.resources "sample-access-key-0" ).connectionDetails.password }}
              url: {{ "http://www.example.com" | b64enc }}
            {{ end }}
            ---
            apiVersion: example.crossplane.io/v1beta1
            kind: UserAccess
            status:
              dummy: cool-status
    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: upbound-function-auto-ready